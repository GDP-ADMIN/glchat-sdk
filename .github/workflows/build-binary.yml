name: Build Binary

on:
  push:
    tags:
      - 'gllm_plugin-v*'
  workflow_dispatch:

jobs:
  Set-Python-Version-Matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Set matrix
        id: set-matrix
        run: |
          echo 'matrix=["3.11.0", "3.12.0"]' >> $GITHUB_OUTPUT
        env:
          GITHUB_REF_NAME: ${{ github.ref_name }}

  Setup-SDK-Binary:
    needs: Set-Python-Version-Matrix
    timeout-minutes: 30
    runs-on: ${{ matrix.os }}
    outputs:
      module: ${{ steps.set-variable.outputs.module }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-sh-arm64, macos-13]
        python-version: ${{ fromJson(needs.Set-Python-Version-Matrix.outputs.matrix) }}
    continue-on-error: true
    steps:
    - uses: actions/checkout@v4

    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry using current Python version
      id: set-variable
      shell: bash
      run: |
        export TAG_NAME="${{  github.ref_name }}"
        export MODULE=$(echo "${TAG_NAME}" | sed -E 's/-v.*$//' | tr '_' '-')
        echo "MODULE=${MODULE}" >> $GITHUB_ENV
        echo "TAG_NAME=${TAG_NAME}" >> $GITHUB_ENV
        echo "module=${MODULE}" >> $GITHUB_OUTPUT
        cd libs/${MODULE}
        python -m pip install --upgrade pip
        python -m pip install poetry==1.8.2
        python -m pip install wheel==0.45.1
        echo "Poetry environment: $(poetry env info)"

    - name: Google Cloud Authentication
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

    - name: Setup Google Cloud SDK
      uses: 'google-github-actions/setup-gcloud@v2'

    - name: Generate Google Authentication Token
      shell: bash
      run: |
        cd libs/${MODULE}
        gcloud auth print-access-token > token.key

    - name: Build Binary
      shell: bash
      run: |
        echo "Processed module name: ${MODULE}"
        cd libs/
        bash build.ci.sh ${MODULE} $(echo "${TAG_NAME}" | sed -E "s/^.*-v//")
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
        BASE_BRANCH: "main"

    - uses: actions/upload-artifact@v4
      with:
        name: dist-${{ matrix.os }}-${{ matrix.python-version }}
        path: libs/${{ env.MODULE }}/dist

    - name: Upload Package To Artifact Registry
      shell: bash
      run: |
        export PYTHON_KEYRING_BACKEND=keyring.backends.null.Keyring
        cd libs/${MODULE}
        poetry config http-basic.gen-ai-publication oauth2accesstoken "$(cat token.key)"
        poetry publish --repository gen-ai-publication --skip-existing

  pypi-publish:
    name: Upload Package To Pypi Registry
    needs: [Set-Python-Version-Matrix, Setup-SDK-Binary]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [windows-latest, macos-sh-arm64, macos-13]
        python-version: ${{ fromJson(needs.Set-Python-Version-Matrix.outputs.matrix) }}
    permissions:
      id-token: write
    steps:
    - uses: actions/download-artifact@v4
      name: dist-${{ matrix.os }}-${{ matrix.python-version }}

    - name: Upload Package To Pypi Registry
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        skip-existing: true
        packages-dir: dist-${{ matrix.os }}-${{ matrix.python-version }}
