name: Build Binary

on:
  push:
    tags:
      - 'gllm_plugin-v*'
  workflow_dispatch:

jobs:
  Setup-SDK-Binary:
    runs-on: ${{ matrix.os }}
    permissions:
      id-token: write  # Required for PyPI Trusted Publishing
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-13, macos-14]
        python-version: ["3.11.0", "3.12.0"]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Setup Poetry
      uses: abatilo/actions-poetry@v3.0.0
      with:
        poetry-version: 1.8.2
      
    - name: Google Cloud Authentication
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.GCP_CREDENTIALS }}'
        
    - name: Setup Google Cloud SDK
      uses: 'google-github-actions/setup-gcloud@v2'
      
    - name: Generate Google Authentication Token
      shell: bash
      run: |
        export TAG_NAME="${{  github.ref_name }}"
        export MODULE=$(echo "${TAG_NAME}" | sed -E 's/-v.*$//' | tr '_' '-')
        echo "MODULE=${MODULE}" >> $GITHUB_ENV
        echo "TAG_NAME=${TAG_NAME}" >> $GITHUB_ENV
        cd libs/${MODULE}
        gcloud auth print-access-token > token.key
        
    - name: Build Binary
      shell: bash
      run: |
        echo "Processed module name: ${MODULE}"
        cd libs/

        bash build.ci.sh ${MODULE}
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}

    - name: Retag Wheel for macOS
      if: startsWith(matrix.os, 'macos')
      shell: bash
      run: |
        echo "üè∑ Retagging wheel for macOS"

        # Extract macOS major version (e.g., 13 or 14)
        MACOS_MAJOR=$(sw_vers -productVersion | cut -d '.' -f 1)

        # Detect arch (should be arm64 on macos-14 runners)
        ARCH=$(uname -m)
        if [ "$ARCH" = "arm64" ]; then
          PLATFORM_ARCH="arm64"
        elif [ "$ARCH" = "x86_64" ]; then
          PLATFORM_ARCH="x86_64"
        else
          echo "‚ùå Unsupported architecture: $ARCH"
          exit 1
        fi

        # Construct the final platform tag
        PLATFORM_TAG="macosx_${MACOS_MAJOR}_0_${PLATFORM_ARCH}"
        echo "Using platform tag: ${PLATFORM_TAG}"

        # Ensure wheel is installed
        pip install wheel

        # Retag the wheel
        cd libs/${MODULE}
        python3 -m wheel tags --platform-tag ${PLATFORM_TAG} --remove dist/*.whl

    - name: Upload Package To Registry
      shell: bash
      run: |
        # Setup .pypirc for Artifact Registry
        cd libs/${MODULE}
        poetry publish --repository gen-ai-publication --skip-existing

    - name: Upload Package to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        packages-dir: libs/${MODULE}/dist/
        skip-existing: true
