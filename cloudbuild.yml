steps:
- id: Generate Google Token
  name: gcr.io/cloud-builders/gcloud
  dir: '${_LANGUAGE}/${_MODULE}'
  entrypoint: 'bash'
  args:
    - '-c'
    - 'gcloud auth print-access-token > token.key'

- id: Test & Build
  name: 'gcr.io/cloud-builders/docker'
  args:
    - "compose"
    - "--file=docker-compose.gcb.yml"
    - "run"
    - "--rm"
    - "builder-${_LANGUAGE}"
  env:
    - 'MODULE=${_MODULE}'
    - 'VERSION=${_VERSION}'
    - 'TAG_NAME=${TAG_NAME}'
  secretEnv:
    - 'GH_TOKEN'
  waitFor: ['-']

- id: Upload Packages
  name: 'gcr.io/cloud-builders/docker'
  entrypoint: '/bin/bash'
  args:
    - '-c'
    - |-
      compose \
        --file=docker-compose.gcb.yml \
        run --rm builder-${_LANGUAGE} \
        -c './publish.sh ${_MODULE}'
  secretEnv:
    - 'PYPI_TOKEN'

- id: Run SCA
  name: 'gcr.io/$PROJECT_ID/secops'
  dir: '${_LANGUAGE}/${_MODULE}'
  script: |
    #!/bin/bash
    set -xe

    export WORKSPACE=$(pwd)
    bash /opt/sq.sh
  env:
    - 'PROJECT_ID=$PROJECT_ID'
    - 'CI_PR_NUMBER=${_PR_NUMBER}'
    - 'CI_BRANCH=${BRANCH_NAME}'
    - 'CI_BASE_BRANCH=${_BASE_BRANCH}'
    - 'VERSION=${_VERSION}'
  secretEnv:
    - 'SCA_TOKEN'
  waitFor: ['Test & Build']

timeout: 30m
options:
  machineType: 'E2_MEDIUM'
  env:
    - 'DOCKER_BUILDKIT=1'
    - 'COMPOSE_DOCKER_CLI_BUILD=1'
    - 'XDG_CACHE_HOME=.cache'
    - 'SONAR_USER_HOME=.cache'

substitutions:
  _PROJECT: gen-ai-external

availableSecrets:
  secretManager:
  - versionName: projects/$PROJECT_ID/secrets/INFRA_GL_GITHUB_TOKEN/versions/latest
    env: 'GH_TOKEN'
  - versionName: "projects/$PROJECT_ID/secrets/INFRA_GL_SONARQUBE_TOKEN/versions/latest"
    env: 'SCA_TOKEN'
  - versionName: "projects/$PROJECT_ID/secrets/GLX_SRE_PYPI_API_TOKEN/versions/latest"
    env: 'PYPI_TOKEN'

tags: ['gen-ai-external', 'push']
